services:
  frontend:
    build: ./frontend
    ports:
      - "4173:4173"
    depends_on:
      - backend
      
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
        weaviate:
          condition: service_healthy



  # nginx:
  #   image: nginx:alpine
  #   container_name: nginx
  #   ports:
  #     - "80:80"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
  #     - ./frontend/static:/usr/share/nginx/html  # or ./frontend/dist if you're using a build tool
  #   depends_on:
  #     - backend

  weaviate:
    image: semitechnologies/weaviate:1.30.0
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      LOG_LEVEL: "error"
      PERSISTENCE_DATA_PATH: /var/lib/weaviate
      RAFT_BOOTSTRAP_EXPECT: 1
      CLUSTER_HOSTNAME: node1
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: True
      # ENABLE_MODULES: text2vec-openai
      # DEFAULT_VECTORIZER_MODULE: text2vec-openai
      # OPENAI_EMBEDDING_MODEL: text-embedding-3-small
      # OPENAI_APIKEY: ${OPENAI_API_KEY}
    volumes:
      - weaviate_data:/var/lib/weaviate
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://weaviate:8080/v1/meta"]
      interval: 5s
      timeout: 3s
      retries: 20

  init-db:
    build: ./init-db
    env_file:
      - .env
    volumes:
      - product_data:/data
    depends_on:
      weaviate:
        condition: service_healthy
    restart: "no"

volumes:
  weaviate_data:
  product_data:
